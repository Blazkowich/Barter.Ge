// <auto-generated />
using System;
using Barter.Ge.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Barter.Ge.DAL.Migrations
{
    [DbContext(typeof(BarterDbContext))]
    partial class BarterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Barter.Ge.DAL.Context.Entities.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryEntityId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("74892eba-ae27-467b-8f4b-5060b46fd76c"),
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("da221366-a4ad-45d0-a6ab-9716bd4e8625"),
                            Name = "Clothing"
                        });
                });

            modelBuilder.Entity("Barter.Ge.DAL.Context.Entities.ExchangeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExchangedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InitiatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemOfferedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemRequestedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Exchanges");
                });

            modelBuilder.Entity("Barter.Ge.DAL.Context.Entities.ItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d9d4985-e07b-47d8-bc8b-0dee01804336"),
                            CategoryId = new Guid("74892eba-ae27-467b-8f4b-5060b46fd76c"),
                            Condition = 0,
                            Description = "This is an example item.",
                            ItemType = 0,
                            Name = "Electronic Item",
                            OwnerId = new Guid("363e30bc-5062-47ea-a3a7-ac50fb85b5a0"),
                            Views = 10
                        },
                        new
                        {
                            Id = new Guid("bb564da6-2be3-4b80-9655-b3cfd653d054"),
                            CategoryId = new Guid("da221366-a4ad-45d0-a6ab-9716bd4e8625"),
                            Condition = 1,
                            Description = "This is an example item.",
                            ItemType = 1,
                            Name = "Clothing Item",
                            OwnerId = new Guid("adc71544-77af-4102-ad2b-45e6a6bef40d"),
                            Views = 20
                        });
                });

            modelBuilder.Entity("Barter.Ge.DAL.Context.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MobileNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Barter.Ge.DAL.Context.Entities.CategoryEntity", b =>
                {
                    b.HasOne("Barter.Ge.DAL.Context.Entities.CategoryEntity", null)
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryEntityId");
                });

            modelBuilder.Entity("Barter.Ge.DAL.Context.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Subcategories");
                });
#pragma warning restore 612, 618
        }
    }
}
